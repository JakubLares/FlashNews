//
//  ArticlesFeedWorker.swift
//  PocketReader
//
//  Created by Jakub Lares on 18.08.18.
//  Copyright (c) 2018 Jakub Lares. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class NetworkWorker {

    //In some larger app, I would create network manager. But here, it would be overkill I think.
    func getArticles(success: @escaping (_ response: ArticlesFeed.GetArticles.Response) -> Void, failure: @escaping (_ error: Error?) -> Void) {
        guard let url = URL(string: "\(Constants.feedURL)&apiKey=\(Constants.apiKey)") else { return }
        URLSession.shared.dataTask(with: url) { data, _, responseError in
            if responseError != nil {
                failure(responseError)
            }

            guard let data = data else {
                failure(NSError(domain: "", code: 0, userInfo: [NSLocalizedDescriptionKey : "Data was not retrieved from request"]) as Error)
                return
            }
            
            do {
                let articles = try JSONDecoder.withDateFormatter.decode(ArticlesFeed.GetArticles.Response.self, from: data)
                success(articles)
            } catch {
                failure(error)
            }
        }.resume()
    }
}
