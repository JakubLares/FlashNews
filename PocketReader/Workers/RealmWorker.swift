//
//  RealmWorker.swift
//  PocketReader
//
//  Created by Jakub Lares on 21.08.18.
//  Copyright (c) 2018 Jakub Lares. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RealmSwift

class RealmWorker {

    var realm: Realm? {
        return try? Realm()
    }

    func saveArticles(_ articles: [Article]?) {
        deleteArticles()
        var articlesToSave = [ArticleRealm]()
        articles?.forEach {
            articlesToSave.append(ArticleRealm(value: [$0.author as Any,
                                                       $0.title as Any,
                                                       $0.description as Any,
                                                       $0.url as Any,
                                                       $0.urlToImage as Any,
                                                       $0.publishedAt as Any]))
        }

        let realm = self.realm
        try? realm?.write {
            realm?.add(articlesToSave)
        }
    }

    func loadArticles() -> [Article] {
        var articles = [Article]()
        let realm = self.realm
        realm?.objects(ArticleRealm.self).forEach {
            articles.append(Article(author: $0.author,
                                    title: $0.title,
                                    description: $0.description,
                                    url: $0.url,
                                    urlToImage: $0.urlToImage,
                                    publishedAt: $0.publishedAt))
        }
        return articles
    }

    private func deleteArticles() {
        let realm = self.realm
        try? realm?.write {
            realm?.deleteAll()
        }
    }
}
