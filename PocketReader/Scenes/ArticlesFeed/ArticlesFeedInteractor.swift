//
//  ArticlesFeedInteractor.swift
//  PocketReader
//
//  Created by Jakub Lares on 18.08.18.
//  Copyright (c) 2018 Jakub Lares. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ArticlesFeedBusinessLogic {
    func getArticles()
    func getArticleDetail(_ row: Int)
}

protocol ArticlesFeedDataStore {
    var selectedArticle: ArticlesFeed.GetArticles.Article? { get set }
}

class ArticlesFeedInteractor: ArticlesFeedBusinessLogic, ArticlesFeedDataStore {
    
    var presenter: ArticlesFeedPresentationLogic?

    var selectedArticle: ArticlesFeed.GetArticles.Article?
    private var response: ArticlesFeed.GetArticles.Response?
    private let worker = NetworkWorker()

    func getArticles() {
        worker.getArticles(success: { [weak self] response in
            self?.response = response
            self?.presenter?.presentArticles(response)
        }) { [weak self] error in
            self?.presenter?.presentError(error)
        }
    }

    func getArticleDetail(_ row: Int) {
        guard let article = response?.articles?[row] else { return }
        selectedArticle = article
        presenter?.presentArticleDetail(article)
    }

}
